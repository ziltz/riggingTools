


/*

	rig_orientBetweenTwoPoints( $obj1,  $obj2);

*/

global proc rig_orientBetweenTwoPoints(string $obj1, string $obj2)
{

	select -cl;
	string $jnt1 = `joint -n "joint1Orient"`;
	string $jnt2 = `joint -n "joint2Orient"`;
	select -cl;
	string $jntReturn = `joint -n "oriented_JNT"`;

	delete`pointConstraint $obj1 $jnt1`;
	delete`pointConstraint $obj2 $jnt2`;

	joint -e  -oj yzx -secondaryAxisOrient zdown -zso $jnt1;

	delete`orientConstraint $jnt1 $jntReturn`;
	delete`pointConstraint $jnt1 $jnt2 $jntReturn`;

	delete $jnt1 $obj1 $obj2;

	makeIdentity -a 1 -r 1 "oriented_JNT";

}


global proc string rig_objOffset(string $obj)
{
	string $grp = `group -em -n ($obj+"Offset")`;
	delete`parentConstraint $obj $grp`;
	parent $obj $grp;

	return $grp;
}

/*

pass in object that has constraint node

*/
global proc string[] rig_returnConstrainers(string $obj)
{
	string $con[] = `listRelatives -typ "constraint" $obj`;

	string $return[] = {};
	if (size($con) > 0)
	{
		string $constrainers[] = `listAttr -ud ($con[0])`;
		
		for ($c in $constrainers)
		{
			string $target = substring ($c,1,(size($c) - 2));
			$return[size($return)] = $target;
		}
	}
	else{

		warning ("No constrainers found."+"\n");

	}

	
	return $return;
}


global proc string rig_stringFirst(string $list[])
{
	return $list[0];;
}


global proc string[] rig_stringToken(string $string, string $key)
{
	string $buffer[] = {};
	$numTokens = `tokenize $string $key $buffer`;

	for ($b in $buffer)
	    print ($b+"\n");

	return $buffer;
}

global proc string rig_nameGetSide(string $name)
{
	string $return = "";
	string $first = rig_stringFirst(rig_stringToken($name, "_"));
	if ( ($first == "l") || ($first == "r") )
		$return = $first;
	return $return;

}