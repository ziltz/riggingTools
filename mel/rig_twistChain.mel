

/*

	

*/
global proc string[] rig_twistChain(string $name, string $start ,string $end, int $numJoints)
{
	string $topGrp = `group -em -n ($name+"TwistTop_GRP") `;


	string $pistonTop = rig_makePiston($start, $end, $name+"Twist");	
	hide $pistonTop;
	string $startJnt = `substitute "_LOC" $start "_JNT"`;
	string $endJnt = `substitute "_LOC" $end "_JNT"`;

	string $aimConStart = rig_stringFirst(`listRelatives -typ "constraint" ($start+"Aim")`);
	string $aimConEnd = rig_stringFirst(`listRelatives -typ "constraint" ($end+"Aim")`);
	setAttr ($aimConStart+".worldUpType") 2; // object rotation up
	setAttr ($aimConEnd+".worldUpType") 2;

	float $step = 1.0 / ($numJoints-1);

	float $startStep = 1;
	float $endStep = 0;

	string $joints[] = rig_chainBetweenTwoPoints($name+"Twist", $start, $end, $numJoints);

	for ($j in $joints)
	{
		catchQuiet(`parent -w $j`);
	}

	string $chainGrp = `group -em -n ($name+"TwistChain_GRP") `;
	for ($i=0;$i < $numJoints;$i++)
	{
		string $grpNme = `substitute "_JNT" ($joints[$i]) "Offset_GRP"`;
		string $grp = `group -em -n ($grpNme) `;
		delete`parentConstraint $joints[$i] $grp`;
		parent $joints[$i] $grp;

		// point constrain offset grp 
		string $con = rig_stringFirst( `pointConstraint $startJnt $endJnt $grp`);
		string $targets[] = rig_constraintReturnTargets( $con);
		setAttr ($con+"."+$targets[0]+"W0") $startStep;
		setAttr ($con+"."+$targets[1]+"W1") $endStep;

		// orient constraint from start and end loc 
		string $con = rig_stringFirst( `orientConstraint -mo $startJnt $endJnt $joints[$i]`);
		string $targets[] = rig_constraintReturnTargets( $con);
		setAttr ($con+"."+$targets[0]+"W0") $startStep;
		setAttr ($con+"."+$targets[1]+"W1") $endStep;
		setAttr ($con+".interpType") 2; // shortest

		$startStep = $startStep - $step;
		$endStep = $endStep + $step;

		parent $grp $chainGrp;
	}
	
	parent $chainGrp $pistonTop $topGrp;



	return {$topGrp, $start, $end};

}


global proc rig_twistChainConstrain(string $start, string $end, string $parentCon, int $endDriver, int $flip)
{
	// constrain end up locator
	string $startCon = rig_stringFirst(rig_returnConstrainers($start+"AimOffset"));
	string $endCon = rig_stringFirst(rig_returnConstrainers($end+"AimOffset"));

	string $twistDriver = $start;
	string $twistOpDriver = $end;
	string $twistStart = $endCon;
	string $twistEnd = $startCon;
	if ($endDriver == 0)
	{
		$twistDriver = $end;
		$twistOpDriver = $start;
		$twistStart = $startCon;
		$twistEnd = $endCon;
	}

	delete`parentConstraint $twistStart ($twistOpDriver+"Up")`;
	delete`parentConstraint $twistStart ($twistDriver+"Up")`;

	string $endUpOffset = `group -em -n ($twistDriver+"UpOffset") `;
	delete`parentConstraint $twistStart $endUpOffset`;

	string $endUpParent = rig_stringFirst(`listRelatives -p ($twistDriver+"Up")`);
	parent $endUpOffset $endUpParent;
	parent ($twistDriver+"Up") $endUpOffset;

	aimConstraint -mo -weight 1 -aimVector $flip 0 0 -upVector 0 $flip 0 -worldUpType "object" -worldUpObject ($start+"AimOffset") $twistEnd ($twistDriver+"Up");
	parentConstraint -mo $parentCon $endUpOffset;
}


global proc rig_twistChainBiped()
{

	string $twistGrp = "twistChain_GRP";
	if (!`objExists $twistGrp`)
	{
		string $grp = `group -em -n $twistGrp `;
		if (`objExists "rig_GRP"`)
			parent $grp "rig_GRP";
	}

	int $flip = 1;
	for ($side in {"l", "r"})
	{	
		if ($side == "r")
			$flip = -1;

		// upper arm 
		if ( (`objExists ($side+"_armJA_JNT")`) && (`objExists ($side+"_elbowJA_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_upperArmStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_upperArmEndTwist_LOC")`);
			parentConstraint ($side+"_armJA_JNT") $startLoc;
			delete`parentConstraint ($side+"_elbowJA_JNT") $endLoc`;
			delete`orientConstraint  ($side+"_armJA_JNT") $endLoc`;
			parentConstraint -mo ($side+"_elbowJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_armUpper"), $startLoc, $endLoc , 5 ));

			rig_twistChainConstrain( $startLoc, $endLoc, $side+"_clavicleJA_JNT", 0, $flip);

			parent $topGrp $twistGrp;
		}

		// lower arm 
		if ( (`objExists ($side+"_handJA_JNT")`) && (`objExists ($side+"_elbowJA_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_lowerArmStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_lowerArmEndTwist_LOC")`);
			delete`parentConstraint ($side+"_handJA_JNT") $startLoc`;
			delete`orientConstraint  ($side+"_elbowJA_JNT") $startLoc`;
			parentConstraint -mo ($side+"_elbowJA_JNT") $startLoc;
			parentConstraint ($side+"_elbowJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_armLower"), $startLoc, $endLoc , 5 ));

			delete`pointConstraint ($side+"_handJA_JNT") ($startLoc+"Up") `;
			delete`pointConstraint ($side+"_handJA_JNT") ($endLoc+"Up") `;
			
			string $offset = `group -em -n ($endLoc+"UpOffset") `;
			delete`parentConstraint ($side+"_handJA_JNT") $offset`;
			string $upParent = rig_stringFirst(`listRelatives -p ($endLoc+"Up")`);
			parent ($endLoc+"Up") $offset;
			parent $offset $upParent;
			orientConstraint -mo -skip y -skip z ($side+"_handJA_JNT") $offset;

			setAttr ($offset+".rotateOrder") 5; // zyx

			parent $topGrp $twistGrp;

		}

		// upper leg 
		if ( (`objExists ($side+"_legJA_JNT")`) && (`objExists ($side+"_kneeJA_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_upperLegStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_upperLegEndTwist_LOC")`);
			parentConstraint ($side+"_legJA_JNT") $startLoc;
			delete`parentConstraint ($side+"_kneeJA_JNT") $endLoc`;
			delete`orientConstraint  ($side+"_legJA_JNT") $endLoc`;
			parentConstraint -mo ($side+"_kneeJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_legUpper"), $startLoc, $endLoc , 5 ));

			rig_twistChainConstrain( $startLoc, $endLoc, "pelvisJA_JNT", 0, $flip);

			parent $topGrp $twistGrp;

		}

		// lower leg 
		if ( (`objExists ($side+"_footJA_JNT")`) && (`objExists ($side+"_kneeJA_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_lowerLegStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_lowerLegEndTwist_LOC")`);
			delete`parentConstraint ($side+"_footJA_JNT") $startLoc`;
			delete`orientConstraint  ($side+"_kneeJA_JNT") $startLoc`;
			parentConstraint -mo ($side+"_kneeJA_JNT") $startLoc;
			parentConstraint ($side+"_kneeJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_legLower"), $startLoc, $endLoc , 5 ));

			delete`pointConstraint ($side+"_footJA_JNT") ($startLoc+"Up") `;
			delete`pointConstraint ($side+"_footJA_JNT") ($endLoc+"Up") `;
			orientConstraint -mo ($side+"_footJA_JNT") ($endLoc+"Up");

			string $offset = `group -em -n ($endLoc+"UpOffset") `;
			delete`parentConstraint ($side+"_footJA_JNT") $offset`;
			string $upParent = rig_stringFirst(`listRelatives -p ($endLoc+"Up")`);
			parent ($endLoc+"Up") $offset;
			parent $offset $upParent;
			orientConstraint -mo -skip y -skip z ($side+"_footJA_JNT") $offset;

			setAttr ($offset+".rotateOrder") 5; // zyx

			parent $topGrp $twistGrp;

		}


	}	



}




global proc rig_twistChainBipedBind()
{

	for ($side in {"l", "r"})
	{
		for ($limb in {"arm", "leg"})
		{
			
			string $upperLimb = ($side+"_"+$limb+"UpperTwist");
			
			if (`objExists ($upperLimb+"_GEO")`)
			{
				string $upperLimbJnts = ($upperLimb+"?_JNT");
				skinCluster -tsb $upperLimbJnts ($upperLimb+"_GEO");
			}

			string $lowerLimb = ($side+"_"+$limb+"LowerTwist");
			if (`objExists ($lowerLimb+"_GEO")`)
			{
				string $lowerLimbJnts = ($lowerLimb+"?_JNT");
				skinCluster -tsb $lowerLimbJnts ($lowerLimb+"_GEO");
			}
		}
		

	}


}




global proc rig_twistChainQuadruped()
{

	string $twistGrp = "twistChain_GRP";
	if (!`objExists $twistGrp`)
	{
		string $grp = `group -em -n $twistGrp `;
		if (`objExists "rig_GRP"`)
			parent $grp "rig_GRP";
	}

	int $flip = 1;
	for ($side in {"l", "r"})
	{	
		if ($side == "r")
			$flip = -1;

		// upper arm 
		if ( (`objExists ($side+"_armJA_JNT")`) && (`objExists ($side+"_elbowJA_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_upperArmStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_upperArmEndTwist_LOC")`);
			parentConstraint ($side+"_armJA_JNT") $startLoc;
			delete`parentConstraint ($side+"_elbowJA_JNT") $endLoc`;
			delete`orientConstraint  ($side+"_armJA_JNT") $endLoc`;
			parentConstraint -mo ($side+"_elbowJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_armUpper"), $startLoc, $endLoc , 5 ));

			rig_twistChainConstrain( $startLoc, $endLoc, $side+"_clavicleJA_JNT", 0, $flip);

			parent $topGrp $twistGrp;
		}

		// lower arm 
		if ( (`objExists ($side+"_handJA_JNT")`) && (`objExists ($side+"_elbowJA_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_lowerArmStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_lowerArmEndTwist_LOC")`);
			delete`parentConstraint ($side+"_handJA_JNT") $startLoc`;
			delete`orientConstraint  ($side+"_elbowJA_JNT") $startLoc`;
			parentConstraint -mo ($side+"_elbowJA_JNT") $startLoc;
			parentConstraint ($side+"_elbowJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_armLower"), $startLoc, $endLoc , 5 ));

			delete`pointConstraint ($side+"_handJA_JNT") ($startLoc+"Up") `;
			delete`pointConstraint ($side+"_handJA_JNT") ($endLoc+"Up") `;
			
			string $offset = `group -em -n ($endLoc+"UpOffset") `;
			delete`parentConstraint ($side+"_handJA_JNT") $offset`;
			string $upParent = rig_stringFirst(`listRelatives -p ($endLoc+"Up")`);
			parent ($endLoc+"Up") $offset;
			parent $offset $upParent;
			orientConstraint -mo -skip y -skip z ($side+"_handJA_JNT") $offset;

			setAttr ($offset+".rotateOrder") 5; // zyx

			parent $topGrp $twistGrp;

		}

		// upper leg 
		if ( (`objExists ($side+"_legJA_JNT")`) && (`objExists ($side+"_kneeJA_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_upperLegStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_upperLegEndTwist_LOC")`);
			parentConstraint ($side+"_legJA_JNT") $startLoc;
			delete`parentConstraint ($side+"_kneeJA_JNT") $endLoc`;
			delete`orientConstraint  ($side+"_legJA_JNT") $endLoc`;
			parentConstraint -mo ($side+"_kneeJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_legUpper"), $startLoc, $endLoc , 5 ));

			rig_twistChainConstrain( $startLoc, $endLoc, "pelvisJA_JNT", 0, $flip);

			parent $topGrp $twistGrp;

		}

		// lower leg 
		if ( (`objExists ($side+"_footJA_JNT")`) && (`objExists ($side+"_kneeJA_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_lowerLegStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_lowerLegEndTwist_LOC")`);
			delete`parentConstraint ($side+"_footJA_JNT") $startLoc`;
			delete`orientConstraint  ($side+"_kneeJA_JNT") $startLoc`;
			parentConstraint -mo ($side+"_kneeJA_JNT") $startLoc;
			parentConstraint ($side+"_kneeJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_legLower"), $startLoc, $endLoc , 5 ));

			delete`pointConstraint ($side+"_footJA_JNT") ($startLoc+"Up") `;
			delete`pointConstraint ($side+"_footJA_JNT") ($endLoc+"Up") `;
			orientConstraint -mo ($side+"_footJA_JNT") ($endLoc+"Up");

			string $offset = `group -em -n ($endLoc+"UpOffset") `;
			delete`parentConstraint ($side+"_footJA_JNT") $offset`;
			string $upParent = rig_stringFirst(`listRelatives -p ($endLoc+"Up")`);
			parent ($endLoc+"Up") $offset;
			parent $offset $upParent;
			orientConstraint -mo -skip y -skip z ($side+"_footJA_JNT") $offset;

			setAttr ($offset+".rotateOrder") 5; // zyx

			parent $topGrp $twistGrp;

		}
		
		// ankle foot 
		if ( (`objExists ($side+"_footJA_JNT")`) && (`objExists ($side+"_footJB_JNT")`) )
		{
			string $startLoc = rig_stringFirst(`spaceLocator -n ($side+"_ankleStartTwist_LOC")`);
			string $endLoc = rig_stringFirst(`spaceLocator -n ($side+"_ankleEndTwist_LOC")`);
			delete`parentConstraint ($side+"_footJB_JNT") $startLoc`;
			delete`orientConstraint  ($side+"_footJA_JNT") $startLoc`;
			parentConstraint -mo ($side+"_footJA_JNT") $startLoc;
			parentConstraint ($side+"_footJA_JNT") $endLoc;
			string $topGrp = rig_stringFirst(rig_twistChain(($side+"_ankle"), $startLoc, $endLoc , 3 ));

			delete`pointConstraint ($side+"_footJB_JNT") ($startLoc+"Up") `;
			delete`pointConstraint ($side+"_footJB_JNT") ($endLoc+"Up") `;
			orientConstraint -mo ($side+"_footJB_JNT") ($endLoc+"Up");

			string $offset = `group -em -n ($endLoc+"UpOffset") `;
			delete`parentConstraint ($side+"_footJB_JNT") $offset`;
			string $upParent = rig_stringFirst(`listRelatives -p ($endLoc+"Up")`);
			parent ($endLoc+"Up") $offset;
			parent $offset $upParent;
			orientConstraint -mo -skip y -skip z ($side+"_footJB_JNT") $offset;

			setAttr ($offset+".rotateOrder") 5; // zyx

			parent $topGrp $twistGrp;

		}

	}	



}

